rule init1
{
    pattern
    {
    }
    replace
    {
        x:Node;
        y:Node;
        z:Node;
        
        x --> y;
        y --> z;
    }
}

rule init2
{
    pattern
    {
    }
    replace
    {
        x:Node;
        y:Node;
        
        x --> y;
        y --> y;
    }
}

rule init3
{
    pattern
    {
    }
    replace
    {
        x:Node;
        y:Node;
        
        x --> x;
        x --> y;
    }
}

rule init4
{
    pattern
    {
    }
    replace
    {
        x:Node;
        y:Node;        
        z:Node;
                
        x --> y;
        y <-- z;
    }
}

rule init5
{
    pattern
    {
    }
    replace
    {
        x:Node;
        y:Node;
        z:Node;
                
        x --> y;
        x --> y;
        y --> z;
    }
}

rule deleteRightNode
{
    dpo pattern
    {
        x:Node;
        y:Node;
        
        x --> y;
    }
    replace
    {
        x;
    }
}

rule deleteDanglingIncomingEdge
{
    dpo pattern
    {
        x:Node;
        
         --> x;
    }
    replace
    {
    }
}

rule deleteDanglingOutgoingEdge
{
    dpo pattern
    {
        x:Node;
        
        x --> ;
    }
    replace
    {
    }
}

rule deleteLeftNode
{
    dpo pattern
    {
        x:Node;
        y:Node;
        
        x --> y;
    }
    modify
    {
        delete(x);
    }
}