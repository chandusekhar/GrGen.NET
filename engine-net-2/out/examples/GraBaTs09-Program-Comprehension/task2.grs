import JDTAST.ecore CFG.ecore PDG.ecore task2.xmi task2.grg
show num nodes
show num edges

debug set layout Hierarchic

dump set node HelperNode color grey
dump set edge HelperEdge color grey

dump set node org_amma_cfg_Expression color grey
dump set node CFG_Enter color green
dump set node CFG_Exit color red
dump set edge org_amma_cfg_Expression_innerExpression color grey
dump set edge org_amma_cfg_AbstractNode_expression color grey

dump set edge pdom color blue
dump set edge pdom_frontier color orange
dump set edge org_amma_pdg_ExpressionNode_controlDependenceNodes color red
dump set edge org_amma_pdg_ExpressionNode_dataDependenceNodes color black
dump set node org_amma_pdg_EnterNode color green
dump set node org_amma_pdg_Expression color grey
dump set edge org_amma_pdg_ExpressionNode_expression color grey
dump set edge org_amma_pdg_Expression_innerExpressions color grey

# Transform AST to CFG
xgrs nameExpressions
xgrs [CFG_handle_statements]
xgrs [CFG_handle_while]
xgrs [CFG_handle_block]
xgrs [CFG_sweep_graph]
xgrs AST_nodes_2_CFG

# Dump CFG
redirect emit cfg_task2-grgen.xmi
xgrs (id)=get_initial_id
xgrs (id) = CFG_number_node(id)*
xgrs CFG_XML_Prefix
xgrs (id)=get_initial_id
xgrs ((n, id)=CFG_get_node_by_id(id) && CFG_dump_AbstractNode(n))*
xgrs CFG_XML_Suffix

# Transform CFG to PDG
xgrs (Add_Enter_Exit & Connect_Enter* & Connect_Exit*)
xgrs init_Post_Dom
xgrs determine_Post_Dom
xgrs Determine_Dominance_Frontiers
xgrs Create_Control_Dependencies
xgrs Delete_Post_Dom*
xgrs add_data_dependencies
xgrs CFG_2_PDG
show graph ycomp
exit
xgrs (counter) = initXMLCounter
xgrs ((counter) = addNodeNumber(counter))*
xgrs (counter) = initXMLCounter
xgrs ((n, helper, counter)=getNodeByNumber(counter) && ((expr)=getExpressionStatementExpression(n) || (expr)=getWhileStatementExpression(n)) && dumpName(expr, helper) && emitNodeTag(n, expr))*
xgrs xmlSuffix
#xgrs [CFG_sweep_graph]
show graph ycomp
