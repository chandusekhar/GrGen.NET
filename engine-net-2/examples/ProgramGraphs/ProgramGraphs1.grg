using ProgramGraphs;

#include "ProgramGraphs0WithoutUsing.grg"

test FirstStatement
{
	mb:MethodBody;
	
	alternative
	{
		Assignment {
			mb -:next-> e:Expression;
			e -:writesTo->;
		}
		Call {
			mb -:next-> e:Expression;
			e -:calls->;
		}
		Return {
			mb -:next-> e:Expression;
			e -:uses->;
		}
		EndOfList {
			negative {
				mb -:next->;
			}
		}
	}
}

rule FirstStatementEx(mb:MethodBody)
{
	alternative
	{
		Assignment {
			mb -:next-> e:Expression;
			e -:writesTo->;
			e -:contains\next-> sub:Expression;
			alternative
			{
				Call {
					sub -ca:calls->;
					
					modify {
						delete(ca);
						sub -:uses-> :Constant <-:contains- mb;
					}
				}
				Use {
					sub -:uses->;
					
					modify { }
				}
			}
			
			modify { }
		}
		Call {
			mb -:next-> e:Expression;
			e -ca:calls->;
			
			modify {
				delete(ca);
				e -:uses-> :Constant <-:contains- mb;
			}
		}
		Return {
			mb -:next-> e:Expression;
			e -:uses->;
			
			modify { }
		}
		Empty {
			negative {
				mb -:next->;
			}
			
			modify { }
		}
	}
	
	modify {
	}
}
